{"version":3,"sources":["pages/admin/videos/video-form.js"],"names":["VideoAdd","history","addToastAction","match","useState","params","id","setId","title","setTitle","file","setFile","isUploading","setIsUploading","oldVideo","setOldVideo","fileRef","useRef","submitVideo","event","preventDefault","stopPropagation","VideoApis","updateVideo","then","ToastStatus","Success","goBack","addVideo","current","value","catch","err","error","Danger","refreshPage","getVideo","res","data","e","useEffect","console","log","variant","onClick","className","onSubmit","md","Group","Label","Control","name","type","placeholder","required","onChange","target","src","File","ref","multiple","files","Fragment","style","position","paddingTop","url","AssetsServerURL","top","left","controls","width","height","removeVideo","disabled","defaultProps","withRouter","connectToasts","connectAuth"],"mappings":"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","file":"static/js/15.c8907aa5.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { Button, Container, Row, Col, Form } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport ReactPlayer from 'react-player/';\r\n\r\nimport { connectToasts, connectAuth } from '../../../common/redux/connects';\r\nimport { ToastStatus } from '../../../common/enums/toast';\r\n\r\nimport VideoApis from '../../../common/api/videos';\r\nimport { AssetsServerURL } from '../../../common/constants/default-values';\r\n\r\n\r\nfunction VideoAdd ({ history, addToastAction, match}) {\r\n    const [id, setId] = useState(() => {\r\n        return match.params.id\r\n    });\r\n    const [title, setTitle] = useState(\"\")\r\n    const [file, setFile] = useState(null)\r\n    const [isUploading, setIsUploading] = useState(false)\r\n    const [oldVideo, setOldVideo] = useState({})\r\n    const fileRef = useRef(null);\r\n    \r\n    const initValues = () => {\r\n        setTitle(\"\")\r\n        setFile(null);\r\n        setIsUploading(false);\r\n        fileRef.current.value = \"\"\r\n    }\r\n\r\n    const submitVideo = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        setIsUploading(true);\r\n\r\n        if(id) {\r\n            VideoApis\r\n                .updateVideo({id: id, title: title, file: file})\r\n                .then(() => {\r\n                    addToastAction(\"Alert\", \"Success\", ToastStatus.Success);\r\n                    history.goBack();\r\n                })\r\n            \r\n        } else {\r\n            VideoApis\r\n                .addVideo({title: title, file: file })\r\n                .then(() => {\r\n                    addToastAction(\"Alert\", \"Success\", ToastStatus.Success);\r\n                    initValues();\r\n                })\r\n                .catch(err =>{\r\n                    addToastAction(\"Alert\", err.error, ToastStatus.Danger);\r\n                    setIsUploading(false);\r\n                })\r\n        }\r\n    }\r\n\r\n    const removeVideo = () => {\r\n        VideoApis\r\n            .removeVideo({id: id})\r\n            .then(() => {\r\n                addToastAction(\"Alert\", \"Video has been deleted\", ToastStatus.Success);\r\n                setId(id);\r\n                refreshPage();\r\n            })\r\n            .catch(err => {\r\n                addToastAction(`[${err}] ${err.error}`, `${err.error}`, ToastStatus.Danger);\r\n            })\r\n    }\r\n\r\n    const refreshPage = () => {\r\n        VideoApis\r\n            .getVideo({id: id})\r\n            .then(res => {\r\n                setOldVideo(res.data);\r\n                setTitle(res.data.title)\r\n            }, e =>  addToastAction(\"Loading Video faild\", e.error, ToastStatus.Danger) )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(id) {\r\n            refreshPage();\r\n        }\r\n    }, [id]);\r\n\r\n    console.log(\"oldVideo\", oldVideo);\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Button variant='link' onClick={() => history.goBack()}>\r\n                        <span className='h6'>Back</span>\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className='mb-5'>\r\n                <Col>\r\n                    <h1 className='text-primary text-center'>{`${id ? 'Update Video': 'Add a new Video'}`}</h1>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Form onSubmit={(e) => submitVideo(e)}\r\n            >\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Form.Group>\r\n                            <Form.Label><strong>Video Title</strong></Form.Label>\r\n                            <Form.Control name=\"title\" type=\"text\" placeholder=\"Video title\" required onChange={e => setTitle(e.target.value)} value={title} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {\r\n                        !oldVideo.src  && \r\n                        <Col md={4}>\r\n                            <Form.Group>\r\n                                <Form.Label><strong>Add a new Video file</strong></Form.Label>\r\n                                <Form.File ref={fileRef} id=\"file\" name=\"file\" multiple={false} onChange={e => setFile(e.target.files[0])}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    }\r\n                    {\r\n                        id && oldVideo.src  && (\r\n                        <React.Fragment>\r\n                            <Col md={4}>\r\n                            {\r\n                                oldVideo.src && <div style={{\r\n                                            position: 'relative',\r\n                                            paddingTop: '56.25%' \r\n                                        }}\r\n                                        className=\"player-wrapper\"\r\n                                    >\r\n                                        <ReactPlayer\r\n                                            className='react-player'\r\n                                            url={`${AssetsServerURL}/${oldVideo.src}`}\r\n                                            style={{\r\n                                                position: 'absolute',\r\n                                                top: 0,\r\n                                                left: 0\r\n                                            }}\r\n                                            controls\r\n                                            width='100%'\r\n                                            height='100%'\r\n                                        />\r\n                                    </div>\r\n                            }\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button className=\"right\" variant=\"danger\" onClick={() => removeVideo()}>\r\n                                    Remove\r\n                                </Button>\r\n                            </Col>\r\n                        </React.Fragment>\r\n                        )\r\n                    }\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"text-right\">\r\n                        <Button className=\"right\" variant=\"primary\" type=\"submit\" disabled={isUploading}>\r\n                            Submit\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nVideoAdd.propTypes = {\r\n    id: PropTypes.number\r\n};\r\n\r\nVideoAdd.defaultProps = {\r\n    id: 0\r\n};\r\n\r\nexport default withRouter(connectToasts(connectAuth(VideoAdd)));\r\n"],"sourceRoot":""}