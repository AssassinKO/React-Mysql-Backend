{"version":3,"sources":["common/api/watch-history.js","../node_modules/react-bootstrap/esm/ButtonGroup.js","pages/admin/users/user-view.js"],"names":["BASE_URL","APIServerURL","WahtchHistoryAPI","getAll","page","perPage","userId","url","axios","get","getOne","id","remove","delete","ButtonGroup","React","forwardRef","_ref","ref","bsPrefix","size","toggle","vertical","className","_ref$as","as","Component","rest","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","baseClass","createElement","_extends","classNames","displayName","defaultProps","role","ReportList","addToastAction","history","match","user","params","useState","createdAt","email","fullName","gender","updatedAt","person","setPerson","watchList","setWatchList","pageIndex","setPageIndex","selectedId","setSelectedId","removeConfirmTarget","setRemoveConfirmTarget","removeConfirmVisibility","setRemoveConfirmVisibility","pagesCount","groupsCount","total","setTotal","refreshPage","UsersApis","then","res","data","WatchhistoryApis","totalPages","useEffect","renderAction","item","UserRole","Admin","Fragment","to","title","icon","faEye","faTrash","onClick","e","target","variant","goBack","timeFromNow","toLowerCase","onChange","console","log","map","number","Item","eventKey","onSelect","index","video","substr","getClickedPopupCount","popupHistories","getlostPopupCount","aria-disabled","isFinished","faCheck","faTimes","dateToLocalString","First","disabled","Prev","active","Next","Last","visible","setVisibility","label","onConfirm","success","ToastStatus","Success","catch","error","Danger","withRouter","connectToasts","connectAuth"],"mappings":"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","file":"static/js/1.7eec8b9d.chunk.js","sourcesContent":["import axios from './configuration';\r\n\r\n// Constants\r\nimport { APIServerURL } from '../constants/default-values';\r\n\r\nconst BASE_URL = `${APIServerURL}/watch-histories`;\r\nconst WahtchHistoryAPI =  {\r\n    getAll: ({ page, perPage, userId }) => {\r\n        let url = `${BASE_URL}?page=${page}&perPage=${perPage}`;\r\n        if (userId) {\r\n            url += `&userId=${userId}`\r\n        }\r\n        return axios.get(url);\r\n    },\r\n    getOne: ({id}) => {\r\n        return axios.get(`${BASE_URL}/${id}`)\r\n    },\r\n    remove: ({id}) => {\r\n        const url = `${BASE_URL}/${id}`;\r\n\r\n        return axios.delete(url);\r\n    },\r\n}\r\n\r\nexport default WahtchHistoryAPI;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container, Row, Col, Pagination, ButtonGroup, Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faCheck, faEye, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { connectToasts, connectAuth } from '../../../common/redux/connects';\r\nimport { ToastStatus } from '../../../common/enums/toast';\r\nimport { UserRole } from '../../../common/enums/auth';\r\nimport { ConfirmPopover } from '../../../components/common/popover';\r\n\r\nimport WatchhistoryApis from '../../../common/api/watch-history';\r\nimport UsersApis from '../../../common/api/users';\r\nimport { dateToLocalString, timeFromNow, getClickedPopupCount, getlostPopupCount } from '../../../common/utils/common';\r\n\r\n\r\nfunction ReportList ({addToastAction, history, match, user}) {\r\n    const id = match.params.id;\r\n    \r\n    const [person, setPerson] = useState({\r\n        createdAt: \"\",\r\n        email: \"\",\r\n        fullName: \"\",\r\n        gender: \"\",\r\n        id: 0,\r\n        role: \"\",\r\n        updatedAt: \"\",\r\n    });\r\n\r\n    const [watchList, setWatchList] = useState([])\r\n    const [pageIndex, setPageIndex] = useState(1);\r\n    const [selectedId, setSelectedId] = useState(0);\r\n\r\n    const [removeConfirmTarget, setRemoveConfirmTarget] = useState(null);\r\n    const [removeConfirmVisibility, setRemoveConfirmVisibility] = useState(false);\r\n\r\n    const [total, setTotal] = useState({ pagesCount: 1, groupsCount: 10 });\r\n\r\n    const refreshPage = () => {\r\n        UsersApis\r\n            .getOne({id: id})\r\n            .then((res) => {\r\n                let user = res.data;\r\n                setPerson(user)\r\n            })\r\n\r\n        WatchhistoryApis\r\n            .getAll({ page: pageIndex, perPage: total.groupsCount, userId: id })\r\n            .then((res) => {\r\n                setTotal({\r\n                    ...total,\r\n                    pagesCount: res.totalPages,\r\n                });\r\n                setWatchList(res.data)\r\n            })\r\n    }\r\n\r\n    const removeHistory = () => {\r\n        WatchhistoryApis\r\n            .remove({id: selectedId})\r\n            .then(res => {\r\n                if(res.success) {\r\n                    addToastAction(\"Alert\", 'Remove success', ToastStatus.Success);\r\n                    refreshPage();\r\n                }\r\n            })\r\n            .catch(e => {\r\n                addToastAction(\"Alert\", e.error, ToastStatus.Danger)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshPage();\r\n    }, [pageIndex, total.groupsCount, id])\r\n\r\n\r\n    const renderAction = (item) =>  {\r\n        if (user.role === UserRole.Admin) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Link to={`/admin/reports/view/${item.id}`} title=\"View\">\r\n                        <FontAwesomeIcon\r\n                            className='cursor-pointer text-info mr-2' \r\n                            size='lg' \r\n                            icon={faEye}\r\n                        />\r\n                    </Link>\r\n                    <FontAwesomeIcon className='cursor-pointer text-danger ml-2' size='lg' icon={faTrash}\r\n                        onClick={(e) => {\r\n                            setRemoveConfirmVisibility(true)\r\n                            setSelectedId(item.id)\r\n                            setRemoveConfirmTarget(e.target)\r\n                        }}\r\n                        title=\"Remove\"\r\n                    />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Link to={`/customer/users/${user.id}/reports/${item.id}`} title=\"View\">\r\n                        <FontAwesomeIcon\r\n                            className='cursor-pointer text-info mr-2' \r\n                            size='lg' \r\n                            icon={faEye}\r\n                        />\r\n                    </Link>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className='pt-4'>\r\n            <Row>\r\n                <Col>\r\n                    <Button variant='link' onClick={() => history.goBack()}>\r\n                        <span className='h6'>Back</span>\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            <Row className='mb-5'>\r\n                <Col>\r\n                    <h1 className='text-center text-primary'>User: {person.fullName}</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <p>\r\n                        <span>Email: </span>\r\n                        <span className=\"\">{person.email}</span>\r\n                    </p>\r\n                </Col>\r\n                <Col>\r\n                    <p>\r\n                        <span>Gender: </span>\r\n                        <span className=\"\">{person.gender}</span>\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <p>\r\n                        <span>Role: </span>\r\n                        <span className=\"\">{person.role}</span>\r\n                    </p>\r\n                </Col>\r\n                <Col>\r\n                    <p>\r\n                        <span>Registed At: </span>\r\n                        <span className=\"\">{timeFromNow(person.createdAt)}</span>\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n\r\n            <div>\r\n                <div className=\"text-right\">\r\n                    <div className=\"mb-2\">\r\n                        <DropdownButton\r\n                            as={ButtonGroup}\r\n                            key={'Info'}\r\n                            id={`dropdown-variants-${'Info'}`}\r\n                            variant={'Info'.toLowerCase()}\r\n                            title={'Page'}\r\n                            onChange={(e) => {\r\n                                console.log(\"ad\", e);\r\n                            }}\r\n                        >\r\n                            {\r\n                                [10, 20, 50, 100].map((number) => (\r\n                                    <Dropdown.Item key={number} eventKey={number} onSelect={(e) => { setTotal({...total, groupsCount: e}) }}>{number}</Dropdown.Item>\r\n                                ))\r\n                            }\r\n                        </DropdownButton>\r\n                    </div>\r\n                </div>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Video</th>\r\n                            <th className=\"text-center\">Popup Clicked</th>\r\n                            <th className=\"text-center\">Popup Lost</th>\r\n                            <th className=\"text-center\">Completed</th>\r\n                            <th>Started At</th>\r\n                            <th>Finished At</th>\r\n                            <th className=\"text-center\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            watchList.map((item, index) => (\r\n                                <tr key={index}>\r\n                                    {\r\n                                        console.log('item', item)\r\n                                    }\r\n                                    <td>{index + 1}</td>\r\n                                    <td>\r\n                                        {\r\n                                            user.role === UserRole.Admin \r\n                                                ?   <Link to={`/admin/videos/view/${item.video.id}`} title={item.video.title}>\r\n                                                        { `${item.video.title}`.substr(0, 10) }\r\n                                                    </Link>\r\n                                                :   <Link to={`/customer/videos/view/${item.video.id}`} title={item.video.title}>\r\n                                                        { `${item.video.title}`.substr(0, 10) }\r\n                                                    </Link>\r\n                                        }\r\n                                    </td>\r\n                                    <td className=\"text-center\">{getClickedPopupCount(item.popupHistories)}</td>\r\n                                    <td className=\"text-center\">{getlostPopupCount(item.popupHistories)}</td>\r\n                                    <td className=\"text-center\">\r\n                                        <FontAwesomeIcon\r\n                                            className='cursor-pointer text-info mr-2' \r\n                                            size='lg'\r\n                                            aria-disabled\r\n                                            icon={item.isFinished && getlostPopupCount(item.popupHistories) === 0 ? faCheck : faTimes}\r\n                                            title={item.isFinished && getlostPopupCount(item.popupHistories) === 0  ? \"Completed\" : \"Didnt completed\"}\r\n                                        />\r\n                                    </td>\r\n                                    <td>{dateToLocalString(item.createdAt)}</td>\r\n                                    <td>{dateToLocalString(item.updatedAt)}</td>\r\n                                    <td className=\"text-center\">\r\n                                        {\r\n                                            renderAction(item)\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                <Row className='justify-content-end'>\r\n                    <Col>\r\n                        <Pagination className='float-right'>\r\n                            <Pagination.First disabled={pageIndex <= 1} onClick={() => setPageIndex(1)} />\r\n                            <Pagination.Prev disabled={pageIndex <= 1} onClick={() => setPageIndex(pageIndex - 1)} />\r\n                            <Pagination.Item active>{pageIndex}</Pagination.Item>\r\n                            <Pagination.Next disabled={pageIndex >= total.pagesCount} onClick={() => setPageIndex(pageIndex + 1)} />\r\n                            <Pagination.Last disabled={pageIndex >= total.pagesCount} onClick={() => setPageIndex(total.pagesCount)} />\r\n                        </Pagination>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <ConfirmPopover \r\n                visible={removeConfirmVisibility} \r\n                target={removeConfirmTarget}\r\n                setVisibility={() => setRemoveConfirmVisibility(false)}\r\n                label=\"Are you sure to delete this report?\"\r\n                onConfirm={removeHistory}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nReportList.propTypes = {};\r\n\r\nReportList.defaultProps = {};\r\n\r\nexport default withRouter(connectToasts(connectAuth(ReportList)));\r\n"],"sourceRoot":""}