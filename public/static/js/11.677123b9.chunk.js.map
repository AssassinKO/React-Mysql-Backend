{"version":3,"sources":["../node_modules/react-bootstrap/esm/ButtonGroup.js","pages/admin/users/users-list.js"],"names":["ButtonGroup","React","forwardRef","_ref","ref","bsPrefix","size","toggle","vertical","className","_ref$as","as","Component","rest","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","baseClass","createElement","_extends","classNames","displayName","defaultProps","role","AdminUsersList","history","addToastAction","useState","users","setUsers","pageIndex","setPageIndex","selectedId","setSelectedId","removeConfirmTarget","setRemoveConfirmTarget","removeConfirmVisibility","setRemoveConfirmVisibility","pagesCount","groupsCount","total","setTotal","refreshPage","UserApis","getAll","page","perPage","then","data","totalPages","useEffect","variant","onClick","goBack","to","icon","faPlus","id","toLowerCase","title","onChange","e","console","log","map","number","Item","eventKey","onSelect","user","index","fullName","email","gender","timeFromNow","createdAt","updatedAt","faEdit","faTrash","target","First","disabled","Prev","active","Next","Last","visible","setVisibility","label","onConfirm","removeOne","res","success","ToastStatus","Success","catch","error","Danger","withRouter","connectToasts","connectAuth"],"mappings":"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","file":"static/js/11.677123b9.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container, Row, Col, Pagination, ButtonGroup, Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faEdit, faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { connectToasts, connectAuth } from '../../../common/redux/connects';\r\nimport { ToastStatus } from '../../../common/enums/toast';\r\nimport { ConfirmPopover } from '../../../components/common/popover';\r\n\r\nimport UserApis from '../../../common/api/users';\r\nimport { timeFromNow } from '../../../common/utils/common';\r\n\r\nfunction AdminUsersList({ history, addToastAction }) {\r\n    let [users, setUsers] = useState([])\r\n    const [pageIndex, setPageIndex] = useState(1);\r\n    const [selectedId, setSelectedId] = useState(1);\r\n\r\n    const [removeConfirmTarget, setRemoveConfirmTarget] = useState(null);\r\n    const [removeConfirmVisibility, setRemoveConfirmVisibility] = useState(false);\r\n\r\n    const [total, setTotal] = useState({ pagesCount: 1, groupsCount: 10 });\r\n\r\n    const refreshPage = () => {\r\n        UserApis\r\n            .getAll({ page: pageIndex, perPage: total.groupsCount })\r\n            .then((data) => {\r\n                setTotal({\r\n                    ...total,\r\n                    pagesCount: data.totalPages,\r\n                });\r\n                setUsers(data.users)\r\n            })\r\n    }\r\n\r\n    const removeVideo = () => {\r\n        UserApis\r\n            .removeOne({id: selectedId})\r\n            .then(res => {\r\n                console.log(\"res\", res);\r\n                if(res.success) {   \r\n                    addToastAction(\"Video Status\", 'Remove success', ToastStatus.Success);\r\n                    refreshPage();\r\n                }\r\n            })\r\n            .catch(e => {\r\n                addToastAction(\"Video Status\", e.error, ToastStatus.Danger)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshPage();\r\n    }, [pageIndex, total.groupsCount])\r\n\r\n    return (\r\n        <Container className='pt-4'>\r\n        <Row>\r\n            <Col>\r\n                <Button variant='link' onClick={() => history.goBack()}>\r\n                    <span className='h6'>Back</span>\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n        \r\n        <Row className='mb-5'>\r\n            <Col>\r\n                <h1 className='text-center text-primary'>Users</h1>\r\n            </Col>\r\n        </Row>\r\n       \r\n        <div>\r\n            <div>\r\n                <div className=\"float-left mb-2\">\r\n                    <Link to=\"/admin/users/add\">\r\n                        <Button variant=\"success\">\r\n                            Add\r\n                            <FontAwesomeIcon \r\n                                className='cursor-pointer text-info ml-2' \r\n                                size='sm' \r\n                                icon={faPlus}\r\n                            />\r\n                        </Button>{' '}\r\n                    </Link>\r\n                </div>\r\n                <div className=\"float-right mb-2\">\r\n                    <DropdownButton\r\n                        as={ButtonGroup}\r\n                        key={'Info'}\r\n                        id={`dropdown-variants-${'Info'}`}\r\n                        variant={'Info'.toLowerCase()}\r\n                        title={'Page'}\r\n                        onChange={(e) => {\r\n                            console.log(\"ad\", e);\r\n                        }}\r\n                    >\r\n                        {\r\n                            [10, 20, 50, 100].map((number) => (\r\n                                <Dropdown.Item key={number} eventKey={number} onSelect={(e) => { setTotal({...total, groupsCount: e}) }}>{number}</Dropdown.Item>\r\n                            ))\r\n                        }\r\n                    </DropdownButton>\r\n                </div>\r\n            </div>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Full Name</th>\r\n                        <th>Email</th>\r\n                        <th>Gender</th>\r\n                        <th>Role</th>\r\n                        <th>Created At</th>\r\n                        <th>Updated At</th>\r\n                        <th className=\"text-center\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        users.map((user, index) => (\r\n                            <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{user.fullName}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{user.gender}</td>\r\n                                <td>{user.role}</td>\r\n                                <td>{timeFromNow(user.createdAt)}</td>\r\n                                <td>{timeFromNow(user.updatedAt)}</td>\r\n\r\n                                <td className=\"text-center\">\r\n                                    {/* <Link to={`/admin/users/view/${user.id}`} title=\"View\">\r\n                                        <FontAwesomeIcon \r\n                                            className='cursor-pointer text-info ml-2' \r\n                                            size='lg' \r\n                                            icon={faEye}\r\n                                        />\r\n                                    </Link> */}\r\n                                    <Link to={`/admin/users/${user.id}/update`} title=\"Edit\">\r\n                                        <FontAwesomeIcon className='cursor-pointer text-info ml-2' size='lg' icon={faEdit} \r\n                                            title=\"Edit\"\r\n                                        />\r\n                                    </Link>\r\n                                    <FontAwesomeIcon className='cursor-pointer text-danger ml-2' size='lg' icon={faTrash}\r\n                                        onClick={(e) => {\r\n                                            setRemoveConfirmVisibility(true)\r\n                                            setSelectedId(user.id)\r\n                                            setRemoveConfirmTarget(e.target)\r\n                                        }}\r\n                                        title=\"Remove\"\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            <Row className='justify-content-end'>\r\n                <Col>\r\n                    <Pagination className='float-right'>\r\n                        <Pagination.First disabled={pageIndex <= 1} onClick={() => setPageIndex(1)} />\r\n                        <Pagination.Prev disabled={pageIndex <= 1} onClick={() => setPageIndex(pageIndex - 1)} />\r\n                        <Pagination.Item active>{pageIndex}</Pagination.Item>\r\n                        <Pagination.Next disabled={pageIndex >= total.pagesCount} onClick={() => setPageIndex(pageIndex + 1)} />\r\n                        <Pagination.Last disabled={pageIndex >= total.pagesCount} onClick={() => setPageIndex(total.pagesCount)} />\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n        <ConfirmPopover \r\n            visible={removeConfirmVisibility} \r\n            target={removeConfirmTarget}\r\n            setVisibility={setRemoveConfirmVisibility}\r\n            label=\"Are you sure to delete this User?\"\r\n            onConfirm={removeVideo}\r\n        />\r\n    </Container>\r\n    );\r\n};\r\n\r\nAdminUsersList.propTypes = {};\r\nAdminUsersList.defaultProps = {};\r\n\r\nexport default withRouter(connectToasts(connectAuth(AdminUsersList)));\r\n"],"sourceRoot":""}