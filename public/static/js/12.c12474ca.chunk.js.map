{"version":3,"sources":["../node_modules/react-bootstrap/esm/ButtonGroup.js","pages/admin/videos/video-list.js"],"names":["ButtonGroup","React","forwardRef","_ref","ref","bsPrefix","size","toggle","vertical","className","_ref$as","as","Component","rest","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","baseClass","createElement","_extends","classNames","displayName","defaultProps","role","VideoList","addToastAction","history","useState","videos","setVideos","pageIndex","setPageIndex","selectedVideoId","setSelectedVideoId","removeConfirmTarget","setRemoveConfirmTarget","removeConfirmVisibility","setRemoveConfirmVisibility","pagesCount","groupsCount","total","setTotal","refreshPage","VideoApis","getVideos","page","perPage","then","data","totalPages","useEffect","variant","onClick","goBack","to","icon","faPlus","id","toLowerCase","title","onChange","e","console","log","map","number","Item","eventKey","onSelect","video","index","timeFromNow","createdAt","updatedAt","faEye","faEdit","faTrash","target","First","disabled","Prev","active","Next","Last","visible","setVisibility","label","onConfirm","remove","res","success","ToastStatus","Success","catch","error","Danger","withRouter","connectToasts","connectAuth"],"mappings":"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","file":"static/js/12.c12474ca.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container, Row, Col, Pagination, ButtonGroup, Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faEdit, faEye, faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { connectToasts, connectAuth } from '../../../common/redux/connects';\r\nimport { ToastStatus } from '../../../common/enums/toast';\r\nimport { ConfirmPopover } from '../../../components/common/popover';\r\n\r\nimport VideoApis from '../../../common/api/videos';\r\nimport { timeFromNow } from '../../../common/utils/common';\r\n\r\nfunction VideoList ({addToastAction, history}) {\r\n    let [videos, setVideos] = useState([])\r\n    const [pageIndex, setPageIndex] = useState(1);\r\n    const [selectedVideoId, setSelectedVideoId] = useState(0);\r\n\r\n    const [removeConfirmTarget, setRemoveConfirmTarget] = useState(null);\r\n    const [removeConfirmVisibility, setRemoveConfirmVisibility] = useState(false);\r\n\r\n    const [total, setTotal] = useState({ pagesCount: 1, groupsCount: 10 });\r\n\r\n    const refreshPage = () => {\r\n        VideoApis\r\n            .getVideos({ page: pageIndex, perPage: total.groupsCount })\r\n            .then((data) => {\r\n                setTotal({\r\n                    ...total,\r\n                    pagesCount: data.totalPages,\r\n                });\r\n                setVideos(data.videos)\r\n            })\r\n    }\r\n\r\n    const removeVideo = () => {\r\n        VideoApis\r\n            .remove({id: selectedVideoId})\r\n            .then(res => {\r\n                if(res.success) {\r\n                    addToastAction(\"Video Status\", 'Remove success', ToastStatus.Success);\r\n                    refreshPage();\r\n                }\r\n            })\r\n            .catch(e => {\r\n                addToastAction(\"Video Status\", e.error, ToastStatus.Danger)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshPage();\r\n    }, [pageIndex, total.groupsCount])\r\n\r\n\r\n    return (\r\n        <Container className='pt-4'>\r\n            <Row>\r\n                <Col>\r\n                    <Button variant='link' onClick={() => history.goBack()}>\r\n                        <span className='h6'>Back</span>\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            <Row className='mb-5'>\r\n                <Col>\r\n                    <h1 className='text-center text-primary'>Video List</h1>\r\n                </Col>\r\n            </Row>\r\n\r\n            <div>\r\n                <div>\r\n                    <div className=\"float-left mb-2\">\r\n                        <Link to=\"/admin/videos/add\">\r\n                            <Button variant=\"success\">\r\n                                Add\r\n                                <FontAwesomeIcon \r\n                                    className='cursor-pointer text-info ml-2' \r\n                                    size='sm' \r\n                                    icon={faPlus}\r\n                                />\r\n                            </Button>{' '}\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"float-right mb-2\">\r\n                        <DropdownButton\r\n                            as={ButtonGroup}\r\n                            key={'Info'}\r\n                            id={`dropdown-variants-${'Info'}`}\r\n                            variant={'Info'.toLowerCase()}\r\n                            title={'Page'}\r\n                            onChange={(e) => {\r\n                                console.log(\"ad\", e);\r\n                            }}\r\n                        >\r\n                            {\r\n                                [10, 20, 50, 100].map((number) => (\r\n                                    <Dropdown.Item key={number} eventKey={number} onSelect={(e) => { setTotal({...total, groupsCount: e}) }}>{number}</Dropdown.Item>\r\n                                ))\r\n                            }\r\n                        </DropdownButton>\r\n                    </div>\r\n                </div>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Title</th>\r\n                            <th>Created At</th>\r\n                            <th>Updated At</th>\r\n                            <th className=\"text-center\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            videos.map((video, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{video.title}</td>\r\n                                    <td>{timeFromNow(video.createdAt)}</td>\r\n                                    <td>{timeFromNow(video.updatedAt)}</td>\r\n\r\n                                    <td className=\"text-center\">\r\n                                        <Link to={`/admin/videos/view/${video.id}`} title=\"View\">\r\n                                            <FontAwesomeIcon \r\n                                                className='cursor-pointer text-info ml-2' \r\n                                                size='lg' \r\n                                                icon={faEye}\r\n                                            />\r\n                                        </Link>\r\n                                        <Link to={`/admin/videos/${video.id}/update`} title=\"Edit\">\r\n                                            <FontAwesomeIcon className='cursor-pointer text-info ml-2' size='lg' icon={faEdit} \r\n                                                title=\"Edit\"\r\n                                            />\r\n                                        </Link>\r\n                                        <FontAwesomeIcon className='cursor-pointer text-danger ml-2' size='lg' icon={faTrash}\r\n                                            onClick={(e) => {\r\n                                                setRemoveConfirmVisibility(true)\r\n                                                setSelectedVideoId(video.id)\r\n                                                setRemoveConfirmTarget(e.target)\r\n                                            }}\r\n                                            title=\"Remove\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                <Row className='justify-content-end'>\r\n                    <Col>\r\n                        <Pagination className='float-right'>\r\n                            <Pagination.First disabled={pageIndex <= 1} onClick={() => setPageIndex(1)} />\r\n                            <Pagination.Prev disabled={pageIndex <= 1} onClick={() => setPageIndex(pageIndex - 1)} />\r\n                            <Pagination.Item active>{pageIndex}</Pagination.Item>\r\n                            <Pagination.Next disabled={pageIndex >= total.pagesCount} onClick={() => setPageIndex(pageIndex + 1)} />\r\n                            <Pagination.Last disabled={pageIndex >= total.pagesCount} onClick={() => setPageIndex(total.pagesCount)} />\r\n                        </Pagination>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <ConfirmPopover \r\n                visible={removeConfirmVisibility} \r\n                target={removeConfirmTarget}\r\n                setVisibility={setRemoveConfirmVisibility}\r\n                label=\"Are you sure to delete this video?\"\r\n                onConfirm={removeVideo}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nVideoList.propTypes = {};\r\n\r\nVideoList.defaultProps = {};\r\n\r\nexport default withRouter(connectToasts(connectAuth(VideoList)));\r\n"],"sourceRoot":""}